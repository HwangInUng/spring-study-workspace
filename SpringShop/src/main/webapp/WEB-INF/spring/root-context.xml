<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
  										http://www.springframework.org/schema/beans/spring-beans.xsd
											http://www.springframework.org/schema/jee
											http://www.springframework.org/schema/jee/spring-jee.xsd
											http://www.springframework.org/schema/beans
											http://www.springframework.org/schema/beans/spring-beans.xsd
											http://www.springframework.org/schema/tx
											https://www.springframework.org/schema/tx/spring-tx-3.0.xsd
											http://www.springframework.org/schema/aop
											https://www.springframework.org/schema/aop/spring-aop-3.0.xsd
											http://www.springframework.org/schema/context
											https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- JNDI 룩업 설정 -->
	<jee:jndi-lookup jndi-name="jdbc/mysql" id="dataSource" resource-ref="true" />

	<!-- 트랜잭션 매니저 등록 -->
	<bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 스프링의 트랜잭션 사용 방법(2가지) -선언적 방법 : xml 설정 -어노테이션 방법 : <tx>태그를 이용하여 등록 -->
	<tx:annotation-driven transaction-manager="dataSourceTransactionManager" />

	<!-- 세션 팩토리 빈 등록 -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:com/edu/springshop/db/config.xml" />
	</bean>

	<!-- 세션 빈 등록 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean" />
	</bean>

	<!-- 자동매핑 범위 설정 -->
	<context:component-scan base-package="com.edu.springshop.model" />

	<!-- MultipartFile 유틸 객체 -->
	<bean id="fileManager" class="com.edu.springshop.util.FileManager" />

	<!-- MultipartResolver 객체 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSizePerFile" value="3145728" />
	</bean>

	<!-- Jackson 컨버터 등록 -->
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list value-type="java.util.ArrayList"> <!-- 자바 자료형에 맞는 컨버터 목록 -->
				<beans:ref bean="mappingJackson2HttpMessageConverter" /> <!-- 컨버터 ID 등록 -->
			</beans:list>
		</beans:property>
	</beans:bean>
	<beans:bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<beans:property name="supportedMediaTypes">
			<!-- 컨텐츠 타입 및 인코딩 처리 -->
			<beans:value>application/json;charset=utf-8</beans:value>
		</beans:property>
	</beans:bean>

	<!-- 암호화 처리 빈 등록 -->
	<beans:bean id="passConverter" class="com.edu.springshop.util.PassConverter" />

	<!-- 이메일 관련 빈 설정 -->
	<beans:bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">

		<!-- 메일보내주는 서버 주소 -->
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="port" value="587" />
		<beans:property name="username" value="ung6860" />
		<beans:property name="password" value="egohqmavuqriltij" /> <!-- google 인증키 -->

		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
				<beans:prop key="mail.smtp.ssl.trust">smtp.gmail.com</beans:prop>
				<beans:prop key="mail.smtp.ssl.protocols">TLSv1.2</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<!-- 이메일 전송 객체 빈으로 등록 -->
	<beans:bean id="emailManager" class="com.edu.springshop.util.EmailManager" />
</beans>